@model ImageUpload.Models.Employee

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm("Edit","Employees",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h2>Employee @Model.Name Information </h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.DeptID, "DeptID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DeptID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DeptID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>



    @*<div class="form-group">
        @Html.LabelFor(model => model.PicturePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PicturePath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PicturePath, "", new { @class = "text-danger" })
        </div>
    </div>*@
<div class="form-group">
    @Html.LabelFor(model => model.PicturePath, htmlAttributes: new { @class = "control-label col-md-2" })
   
    @if (Model.PicturePath != null)
    {
        @Html.HiddenFor(m => m.PicturePath)

        <img src="@Url.Content(Model.PicturePath)" alt="@Model.Name" height="100" width="150" id="empimg" />
    }

    <input type="file" name="Pic" id="Pic" style="display:none" class="form-control" />
    <input type="button" value="Change picture" id="btnchange" class="btn btn-success" />
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $("#btnchange").click(function () {
            $("#empimg").hide();
            $("#Pic").show();
            $(this).hide();
        })
    })
    </script>
}
